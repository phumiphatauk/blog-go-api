// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.21.0
// source: user_role.sql

package db

import (
	"context"
)

const createUserRole = `-- name: CreateUserRole :exec
INSERT INTO user_role 
(user_id, role_id, created_at) 
VALUES 
($1, $2, NOW()::TIMESTAMP)
`

type CreateUserRoleParams struct {
	UserID int64 `json:"user_id"`
	RoleID int64 `json:"role_id"`
}

func (q *Queries) CreateUserRole(ctx context.Context, arg CreateUserRoleParams) error {
	_, err := q.db.Exec(ctx, createUserRole, arg.UserID, arg.RoleID)
	return err
}

const deleteUserRoleByUserId = `-- name: DeleteUserRoleByUserId :exec
UPDATE user_role
SET deleted = True,
updated_at = NOW()::TIMESTAMP
WHERE user_id = $1
`

func (q *Queries) DeleteUserRoleByUserId(ctx context.Context, userID int64) error {
	_, err := q.db.Exec(ctx, deleteUserRoleByUserId, userID)
	return err
}
