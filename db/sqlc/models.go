// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.21.0

package db

import (
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Blog struct {
	ID        int64     `json:"id"`
	Title     string    `json:"title"`
	Content   string    `json:"content"`
	Image     string    `json:"image"`
	Url       string    `json:"url"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	Deleted   bool      `json:"deleted"`
}

type BlogTag struct {
	ID        int64     `json:"id"`
	BlogID    int64     `json:"blog_id"`
	TagID     int64     `json:"tag_id"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	Deleted   bool      `json:"deleted"`
}

type Permission struct {
	ID                int64  `json:"id"`
	Code              string `json:"code"`
	Name              string `json:"name"`
	PermissionGroupID int64  `json:"permission_group_id"`
}

type PermissionGroup struct {
	ID   int64  `json:"id"`
	Name string `json:"name"`
}

type ResetPassword struct {
	ID        int32            `json:"id"`
	UserID    int64            `json:"user_id"`
	Token     string           `json:"token"`
	ExpiresAt pgtype.Timestamp `json:"expires_at"`
	Used      pgtype.Bool      `json:"used"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
}

type Role struct {
	ID        int64              `json:"id"`
	Name      string             `json:"name"`
	CreatedAt time.Time          `json:"created_at"`
	UpdatedAt pgtype.Timestamptz `json:"updated_at"`
	Deleted   bool               `json:"deleted"`
}

type RolePermission struct {
	ID           int64              `json:"id"`
	RoleID       int64              `json:"role_id"`
	PermissionID int64              `json:"permission_id"`
	CreatedAt    time.Time          `json:"created_at"`
	UpdatedAt    pgtype.Timestamptz `json:"updated_at"`
	Deleted      bool               `json:"deleted"`
}

type Session struct {
	ID           uuid.UUID `json:"id"`
	UserID       int64     `json:"user_id"`
	RefreshToken string    `json:"refresh_token"`
	UserAgent    string    `json:"user_agent"`
	ClientIp     string    `json:"client_ip"`
	IsBlocked    bool      `json:"is_blocked"`
	ExpiresAt    time.Time `json:"expires_at"`
	CreatedAt    time.Time `json:"created_at"`
}

type Tag struct {
	ID        int64     `json:"id"`
	Name      string    `json:"name"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	Deleted   bool      `json:"deleted"`
}

type User struct {
	ID                int64              `json:"id"`
	Code              string             `json:"code"`
	Username          string             `json:"username"`
	FirstName         string             `json:"first_name"`
	LastName          string             `json:"last_name"`
	Email             string             `json:"email"`
	Phone             string             `json:"phone"`
	Description       pgtype.Text        `json:"description"`
	HashedPassword    string             `json:"hashed_password"`
	PasswordChangedAt time.Time          `json:"password_changed_at"`
	CreatedAt         time.Time          `json:"created_at"`
	UpdatedAt         pgtype.Timestamptz `json:"updated_at"`
	Deleted           bool               `json:"deleted"`
}

type UserRole struct {
	ID        int64              `json:"id"`
	UserID    int64              `json:"user_id"`
	RoleID    int64              `json:"role_id"`
	CreatedAt time.Time          `json:"created_at"`
	UpdatedAt pgtype.Timestamptz `json:"updated_at"`
	Deleted   bool               `json:"deleted"`
}
