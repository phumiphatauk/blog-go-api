// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.21.0
// source: common.sql

package db

import (
	"context"
	"time"

	"github.com/jackc/pgx/v5/pgtype"
)

const fixErrorImportPGType = `-- name: FixErrorImportPGType :one
SELECT NOW()::TIMESTAMP == $1::TIMESTAMP
`

// Queries to fix import errors in querier.go file
// Please not use this queries for other purpose
func (q *Queries) FixErrorImportPGType(ctx context.Context, dollar_1 pgtype.Timestamp) (interface{}, error) {
	row := q.db.QueryRow(ctx, fixErrorImportPGType, dollar_1)
	var column_1 interface{}
	err := row.Scan(&column_1)
	return column_1, err
}

const fixErrorImportTime = `-- name: FixErrorImportTime :one
SELECT id FROM users where created_at == $1
`

// Queries to fix import errors in querier.go file
// Please not use this queries for other purpose
func (q *Queries) FixErrorImportTime(ctx context.Context, createdAt time.Time) (int64, error) {
	row := q.db.QueryRow(ctx, fixErrorImportTime, createdAt)
	var id int64
	err := row.Scan(&id)
	return id, err
}
